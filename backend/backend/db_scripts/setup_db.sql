-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.cepage
(
    id serial NOT NULL,
    nom text COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT cepage_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.etat_rang
(
    id_rang integer NOT NULL,
    annee integer NOT NULL,
    taille boolean NOT NULL DEFAULT false,
    remaillage boolean NOT NULL DEFAULT false,
    pliage boolean NOT NULL DEFAULT false,
    mondage boolean NOT NULL DEFAULT false,
    mondage_2 boolean NOT NULL DEFAULT false,
    mouchage boolean NOT NULL DEFAULT false,
    relevage boolean NOT NULL DEFAULT false,
    relevage_2 boolean NOT NULL DEFAULT false,
    effeuillage boolean NOT NULL DEFAULT false,
    vendange boolean NOT NULL DEFAULT false,
    CONSTRAINT etat_rang_pkey PRIMARY KEY (id_rang, annee)
);

CREATE TABLE IF NOT EXISTS public.log
(
    id serial NOT NULL,
    id_parcelle integer NOT NULL,
    id_type_tache integer NOT NULL,
    nb_heures double precision,
    date date,
    commentaire text COLLATE pg_catalog."default",
    CONSTRAINT log_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.parcelle
(
    id serial NOT NULL,
    nom text COLLATE pg_catalog."default" NOT NULL,
    region polygon,
    id_cepage serial NOT NULL,
    id_taille integer,
    id_pliage integer,
    CONSTRAINT parcelle_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.pliage
(
    id serial NOT NULL,
    nom text COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT pliage_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.rang
(
    id serial NOT NULL,
    id_parcelle integer NOT NULL,
    p0 point NOT NULL,
    p1 point NOT NULL,
    CONSTRAINT rang_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.rappel
(
    id serial NOT NULL,
    nom text COLLATE pg_catalog."default" NOT NULL,
    date date NOT NULL,
    fait boolean NOT NULL DEFAULT false,
    CONSTRAINT rappel_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.reparation
(
    id serial NOT NULL,
    id_type_reparation integer,
    id_parcelle integer NOT NULL,
    id_rang integer,
    "position" double precision,
    date_accident date,
    faite boolean NOT NULL DEFAULT false,
    CONSTRAINT reparation_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.saison
(
    annee integer NOT NULL,
    terminee boolean NOT NULL DEFAULT false,
    CONSTRAINT saison_pkey PRIMARY KEY (annee)
);

CREATE TABLE IF NOT EXISTS public.taille
(
    id serial NOT NULL,
    nom text COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT taille_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.type_reparation
(
    id serial NOT NULL,
    nom text COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT type_reparation_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.type_tache
(
    id serial NOT NULL,
    nom text COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT type_tache_pkey PRIMARY KEY (id)
);

ALTER TABLE IF EXISTS public.etat_rang
    ADD CONSTRAINT etat_rang_annee_fkey FOREIGN KEY (annee)
    REFERENCES public.saison (annee) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.etat_rang
    ADD CONSTRAINT etat_rang_id_rang_fkey FOREIGN KEY (id_rang)
    REFERENCES public.rang (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.log
    ADD CONSTRAINT log_id_parcelle_fkey FOREIGN KEY (id_parcelle)
    REFERENCES public.parcelle (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.log
    ADD CONSTRAINT log_id_type_tache_fkey FOREIGN KEY (id_type_tache)
    REFERENCES public.type_tache (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.parcelle
    ADD CONSTRAINT id_cepage FOREIGN KEY (id_cepage)
    REFERENCES public.cepage (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.parcelle
    ADD CONSTRAINT id_pliage FOREIGN KEY (id_pliage)
    REFERENCES public.pliage (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.parcelle
    ADD CONSTRAINT id_taille FOREIGN KEY (id_taille)
    REFERENCES public.taille (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.rang
    ADD CONSTRAINT rang_id_parcelle_fkey FOREIGN KEY (id_parcelle)
    REFERENCES public.parcelle (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.reparation
    ADD CONSTRAINT reparation_id_parcelle_fkey FOREIGN KEY (id_parcelle)
    REFERENCES public.parcelle (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.reparation
    ADD CONSTRAINT reparation_id_rang_fkey FOREIGN KEY (id_rang)
    REFERENCES public.rang (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.reparation
    ADD CONSTRAINT reparation_id_type_reparation_fkey FOREIGN KEY (id_type_reparation)
    REFERENCES public.type_reparation (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;

END;